import numpy as np
from sklearn.neural_network import MLPClassifier
import matplotlib.pyplot as plt

# Define the XOR input and output
X = np.array([[0, 0],
              [0, 1],
              [1, 0],
              [1, 1]])
y = np.array([0, 1, 1, 0])  # XOR output

# Create the MLP model
mlp = MLPClassifier(hidden_layer_sizes=(2,), activation='relu', max_iter=1000)

# Train the model
mlp.fit(X, y)

# Test the model
predictions = mlp.predict(X)

# Print the results
for input_data, prediction in zip(X, predictions):
    print(f"Input: {input_data}, Predicted: {prediction}")

#visualization
plt.scatter(X[:, 0], X[:, 1], c=y, s=100, edgecolor='k', cmap=plt.cm.Paired)

# Title and labels
plt.title("MLP Logic Network Decision Boundaries")
plt.xlabel("Input 1")
plt.ylabel("Input 2")
plt.grid(True)
plt.show()
